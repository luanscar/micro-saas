// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "sessions")
}

enum Role {
  ADMIN
  MODERATOR
  OWNER
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(MODERATOR)
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt

  accounts    Account[]
  sessions    Session[]
  permissions Permissions[]

  companyId String?
  company   Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)

  stripeCustomerId       String?        @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?        @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?        @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?      @map(name: "stripe_current_period_end")
  teams                  UsersOnTeams[]

  @@index([companyId])
  @@map(name: "users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map(name: "verification_tokens")
}

model Company {
  id             String                 @id @default(cuid())
  companyName    String
  createdAt      DateTime               @default(now()) @map(name: "created_at")
  updatedAt      DateTime               @updatedAt
  users          User[]
  permissions    Permissions[]
  sidebarOptions CompanySidebarOption[]
  teams          Team[]

  @@map(name: "companies")
}

model Team {
  id        String   @id @default(cuid())
  teamName  String   @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  companyId String
  companies Company @relation(fields: [companyId], references: [id], onDelete: Cascade)

  users UsersOnTeams[]

  @@index([companyId])
  @@map(name: "team")
}

model UsersOnTeams {
  userId String
  teamId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@id([userId, teamId])
}

model CompanySidebarOption {
  id        String   @id @default(uuid())
  name      String   @default("Menu")
  link      String   @default("#")
  icon      Icon     @default(info)
  companyId String
  Company   Company? @relation(fields: [companyId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([companyId])
  @@map(name: "company_sidebar_options")
}

model Permissions {
  id        String  @id @default(uuid())
  email     String
  User      User    @relation(fields: [email], references: [email], onDelete: Cascade)
  companyId String
  companies Company @relation(fields: [companyId], references: [id], onDelete: Cascade)
  access    Boolean

  @@index([companyId])
  @@index([email])
  @@map(name: "permissions")
}

enum Icon {
  settings
  chart
  calendar
  check
  chip
  compass
  database
  flag
  home
  info
  link
  lock
  messages
  notification
  payment
  power
  receipt
  shield
  star
  tune
  videorecorder
  wallet
  warning
  headphone
  send
  pipelines
  person
  category
  contact
  clipboardIcon
}
